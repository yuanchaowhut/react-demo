{"version":3,"sources":["components/Demo.js","App.js","reportWebVitals.js","index.js"],"names":["mContext","React","createContext","GrandChild","Consumer","name","Component","Child","Demo","state","number","handleChange","setState","preState","newNumber","Provider","value","this","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEMA,EAAWC,IAAMC,gBAEjBC,E,4JACF,WACI,OAAO,cAACH,EAASI,SAAV,UACF,gBAAEC,EAAF,EAAEA,KAAF,OAAa,gCACV,4DACA,8CAAiBA,e,GALRC,aAWnBC,E,4JACF,WACI,OAAO,gCACH,uDACA,cAAC,EAAD,W,GAJQD,aAiCLE,E,4MArBXC,MAAQ,CACJJ,KAAM,MACNK,OAAQ,G,EAIZC,aAAe,WACX,EAAKC,UAAS,SAAAC,GACV,IAAMC,EAAYD,EAASH,OAAS,EACpC,MAAO,CAACL,KAAMQ,EAASR,KAAOS,EAAWJ,OAAQI,O,4CAIzD,WACI,OAAO,eAACd,EAASe,SAAV,CAAmBC,MAAOC,KAAKR,MAA/B,UACH,wBAAQS,QAASD,KAAKN,aAAtB,oBACA,cAAC,EAAD,W,GAlBOL,aCfJa,E,4JALX,WACI,OAAO,cAAC,EAAD,Q,GAHGb,aCSHc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.597d0e79.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst mContext = React.createContext();\n\nclass GrandChild extends Component {\n    render() {\n        return <mContext.Consumer>\n            {({name}) => (<div>\n                <h1>I am grandchild component!</h1>\n                <h1>His name is {name}</h1>\n            </div>)}\n        </mContext.Consumer>;\n    }\n}\n\nclass Child extends Component {\n    render() {\n        return <div>\n            <h1>I am child component!</h1>\n            <GrandChild/>\n        </div>;\n    }\n}\n\n\nclass Demo extends Component {\n    // eslint-disable-next-line no-undef\n    state = {\n        name: \"Tom\",\n        number: 0\n    }\n\n    // eslint-disable-next-line no-undef\n    handleChange = () => {\n        this.setState(preState => {\n            const newNumber = preState.number + 1;\n            return {name: preState.name + newNumber, number: newNumber}\n        })\n    }\n\n    render() {\n        return <mContext.Provider value={this.state}>\n            <button onClick={this.handleChange}>change</button>\n            <Child/>\n        </mContext.Provider>\n    }\n}\n\nexport default Demo;\n","import React, {Component} from 'react';\nimport Demo from \"./components/Demo\";\n\nclass App extends Component {\n\n    render() {\n        return <Demo/>\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}